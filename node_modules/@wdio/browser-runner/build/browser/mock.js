// src/browser/mock.ts
var createRequire = () => {
  const require2 = () => {
  };
  require2.resolve = () => {
  };
  return require2;
};
var SUPPORTED_BROWSER = [];
var locatorStrategy = {};
var EventEmitter = class {
};
var URL = window.URL;
var pathToFileURL = () => "";
var fileURLToPath = () => "";
var dirname = () => "";
var resolve = () => "";
var download = () => "";
var findEdgePath = () => "";
var sep = "/";
var start = () => {
};
var install = () => {
};
var computeExecutablePath = () => {
};
var Browser = () => {
};
var getInstalledBrowsers = () => {
};
var canDownload = () => {
};
var resolveBuildId = () => {
};
var ChromeReleaseChannel = () => {
};
var detectBrowserPlatform = () => {
};
var type = "browser";
var sync = () => {
};
var locateChrome = () => {
};
var locateFirefox = () => {
};
var locateApp = () => {
};
var mock_default = () => {
};
export {
  Browser,
  ChromeReleaseChannel,
  EventEmitter,
  SUPPORTED_BROWSER,
  URL,
  canDownload,
  computeExecutablePath,
  createRequire,
  mock_default as default,
  detectBrowserPlatform,
  dirname,
  download,
  fileURLToPath,
  findEdgePath,
  getInstalledBrowsers,
  install,
  locateApp,
  locateChrome,
  locateFirefox,
  locatorStrategy,
  pathToFileURL,
  resolve,
  resolveBuildId,
  sep,
  start,
  sync,
  type
};
