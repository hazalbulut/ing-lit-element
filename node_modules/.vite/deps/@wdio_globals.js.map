{
  "version": 3,
  "sources": ["../../@wdio/globals/build/index.js"],
  "sourcesContent": ["// src/index.ts\nvar globals = globalThis._wdioGlobals = globalThis._wdioGlobals || /* @__PURE__ */ new Map();\nvar GLOBALS_ERROR_MESSAGE = `No browser instance registered. Don't import @wdio/globals outside of the WDIO testrunner context. Or you have two two different \"@wdio/globals\" packages installed.`;\nfunction proxyHandler(key) {\n  return {\n    get: (self, prop) => {\n      if (!globals.has(key)) {\n        throw new Error(GLOBALS_ERROR_MESSAGE);\n      }\n      const receiver = globals.get(key);\n      const field = receiver[prop];\n      return typeof field === \"function\" ? field.bind(receiver) : field;\n    }\n  };\n}\nvar browser = new Proxy(\n  class Browser {\n  },\n  proxyHandler(\"browser\")\n);\nvar driver = new Proxy(\n  class Browser2 {\n  },\n  proxyHandler(\"driver\")\n);\nvar multiremotebrowser = new Proxy(\n  class Browser3 {\n  },\n  proxyHandler(\"multiremotebrowser\")\n);\nvar $ = (...args) => {\n  if (!globals.has(\"$\")) {\n    throw new Error(GLOBALS_ERROR_MESSAGE);\n  }\n  return globals.get(\"$\")(...args);\n};\nvar $$ = (...args) => {\n  if (!globals.has(\"$$\")) {\n    throw new Error(GLOBALS_ERROR_MESSAGE);\n  }\n  return globals.get(\"$$\")(...args);\n};\nvar expect = (...args) => {\n  if (!globals.has(\"expect\")) {\n    throw new Error(GLOBALS_ERROR_MESSAGE);\n  }\n  return globals.get(\"expect\")(...args);\n};\nvar ASYNC_MATCHERS = [\n  \"any\",\n  \"anything\",\n  \"arrayContaining\",\n  \"objectContaining\",\n  \"stringContaining\",\n  \"stringMatching\"\n];\nfor (const matcher of ASYNC_MATCHERS) {\n  expect[matcher] = (...args) => {\n    if (!globals.has(\"expect\")) {\n      throw new Error(GLOBALS_ERROR_MESSAGE);\n    }\n    return globals.get(\"expect\")[matcher](...args);\n  };\n}\nexpect.not = ASYNC_MATCHERS.reduce((acc, matcher) => {\n  acc[matcher] = (...args) => {\n    if (!globals.has(\"expect\")) {\n      throw new Error(GLOBALS_ERROR_MESSAGE);\n    }\n    return globals.get(\"expect\").not[matcher](...args);\n  };\n  return acc;\n}, {});\nexpect.extend = (...args) => {\n  if (!globals.has(\"expect\")) {\n    throw new Error(GLOBALS_ERROR_MESSAGE);\n  }\n  const expect2 = globals.get(\"expect\");\n  return expect2.extend(...args);\n};\nfunction _setGlobal(key, value, setGlobal = true) {\n  globals.set(key, value);\n  if (setGlobal) {\n    globalThis[key] = value;\n  }\n}\nexport {\n  $,\n  $$,\n  _setGlobal,\n  browser,\n  driver,\n  expect,\n  multiremotebrowser\n};\n"],
  "mappings": ";;;AACA,IAAI,UAAU,WAAW,eAAe,WAAW,gBAAgC,oBAAI,IAAI;AAC3F,IAAI,wBAAwB;AAC5B,SAAS,aAAa,KAAK;AACzB,SAAO;AAAA,IACL,KAAK,CAAC,MAAM,SAAS;AACnB,UAAI,CAAC,QAAQ,IAAI,GAAG,GAAG;AACrB,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACvC;AACA,YAAM,WAAW,QAAQ,IAAI,GAAG;AAChC,YAAM,QAAQ,SAAS,IAAI;AAC3B,aAAO,OAAO,UAAU,aAAa,MAAM,KAAK,QAAQ,IAAI;AAAA,IAC9D;AAAA,EACF;AACF;AACA,IAAI,UAAU,IAAI;AAAA,EAChB,MAAM,QAAQ;AAAA,EACd;AAAA,EACA,aAAa,SAAS;AACxB;AACA,IAAI,SAAS,IAAI;AAAA,EACf,MAAM,SAAS;AAAA,EACf;AAAA,EACA,aAAa,QAAQ;AACvB;AACA,IAAI,qBAAqB,IAAI;AAAA,EAC3B,MAAM,SAAS;AAAA,EACf;AAAA,EACA,aAAa,oBAAoB;AACnC;AACA,IAAI,IAAI,IAAI,SAAS;AACnB,MAAI,CAAC,QAAQ,IAAI,GAAG,GAAG;AACrB,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AACA,SAAO,QAAQ,IAAI,GAAG,EAAE,GAAG,IAAI;AACjC;AACA,IAAI,KAAK,IAAI,SAAS;AACpB,MAAI,CAAC,QAAQ,IAAI,IAAI,GAAG;AACtB,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AACA,SAAO,QAAQ,IAAI,IAAI,EAAE,GAAG,IAAI;AAClC;AACA,IAAI,SAAS,IAAI,SAAS;AACxB,MAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AAC1B,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AACA,SAAO,QAAQ,IAAI,QAAQ,EAAE,GAAG,IAAI;AACtC;AACA,IAAI,iBAAiB;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,WAAW,WAAW,gBAAgB;AACpC,SAAO,OAAO,IAAI,IAAI,SAAS;AAC7B,QAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AAC1B,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACvC;AACA,WAAO,QAAQ,IAAI,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI;AAAA,EAC/C;AACF;AACA,OAAO,MAAM,eAAe,OAAO,CAAC,KAAK,YAAY;AACnD,MAAI,OAAO,IAAI,IAAI,SAAS;AAC1B,QAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AAC1B,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACvC;AACA,WAAO,QAAQ,IAAI,QAAQ,EAAE,IAAI,OAAO,EAAE,GAAG,IAAI;AAAA,EACnD;AACA,SAAO;AACT,GAAG,CAAC,CAAC;AACL,OAAO,SAAS,IAAI,SAAS;AAC3B,MAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AAC1B,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AACA,QAAM,UAAU,QAAQ,IAAI,QAAQ;AACpC,SAAO,QAAQ,OAAO,GAAG,IAAI;AAC/B;AACA,SAAS,WAAW,KAAK,OAAO,YAAY,MAAM;AAChD,UAAQ,IAAI,KAAK,KAAK;AACtB,MAAI,WAAW;AACb,eAAW,GAAG,IAAI;AAAA,EACpB;AACF;",
  "names": []
}
